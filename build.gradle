import net.masterthought.cucumber.Configuration
import net.masterthought.cucumber.ReportBuilder

version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        maven {
            url 'http://repo.bodar.com'
        }
    }
    dependencies {
        classpath 'net.masterthought:cucumber-reporting:3.1.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-testng', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.5'
    testCompile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.25'
    compile group: 'net.masterthought', name: 'cucumber-reporting', version: '3.1.0'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-alpha-1'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '1.7.2'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
}

def generateReport(String pathCucumber, String pathReport) {
    File jsonFile = new File(pathCucumber)
    if (jsonFile.exists()) {
        File reportOutputDirectory = new File(pathReport)
        List<String> jsonReportFiles = new ArrayList<>()
        jsonReportFiles.add(pathCucumber)
        String buildProjectName = 'tsweb'
        Configuration configuration = new Configuration(reportOutputDirectory, buildProjectName)
        ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
        reportBuilder.generateReports()
    }
}

tasks.withType(Test) {
    useTestNG()

    systemProperty "tags", tags
    systemProperty "featuresPath", featuresPath
}

task runFeatures(type: Test) {
    options {
        jvmArgs = [ '-Dcucumber.options= ' +
                            '--glue com.automationpractice ' +
                            '--plugin pretty ' +
                            '--plugin json:build/cucumber/cucumber.json ' +
                            '--plugin rerun:build/cucumber/rerun.txt ' +
                            'classpath: ' + featuresPath + ' ' +
                            '--tags ' + tags
        ]
    }

    doLast {
        generateReport("build/cucumber/cucumber.json", "build/cucumber/reports")
    }
}